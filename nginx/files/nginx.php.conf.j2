worker_processes  5;  ## Default: 1
worker_rlimit_nofile 8192;

#user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 4096; # increase if you have lots of clients
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}


http {
    server_tokens off;

    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log   /var/log/access.log  main;

    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    {% for server in php_socks %}

    server {

    listen {{ server.listen }} ssl;
    server_name {{ server.server_name }};
    client_max_body_size 4G;
    keepalive_timeout 5;

    ssl_certificate /etc/nginx/ssl/{{ server.ssl_certificate }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ server.ssl_certificate }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;

    ## Only allow these request methods ##
     if ($request_method !~ ^(GET|HEAD|POST)$ ) {
         return 444;
     }
    ## Do not accept DELETE, SEARCH and other methods ##

    # Add index.php to setup Nginx, PHP & PHP-FPM config
    index index.php index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ =404;
    }

    # pass PHP scripts on Nginx to FastCGI (PHP-FPM) server
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;

        # Nginx php-fpm sock config:
        fastcgi_pass {{ server.sock }};
        # Nginx php-cgi config :
        # Nginx PHP fastcgi_pass 127.0.0.1:9000;
    }

    # deny access to Apache .htaccess on Nginx with PHP, 
    # if Apache and Nginx document roots concur
    location ~ /\.ht {
        deny all;
    }
    } # End of PHP FPM Nginx config example
    {% endfor %}
}